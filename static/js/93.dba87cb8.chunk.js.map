{"version":3,"file":"static/js/93.dba87cb8.chunk.js","mappings":"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","sources":["Api/api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: \"eabf3be64fad896cb931bdc5f8933714\",\n};\n\nconst searchPopularMovies = async (filter, page) => {\n  const response = await axios.get(`trending/movie/${filter}`, {\n    params: {\n      page,\n    },\n  });\n\n  return response;\n};\n\nconst searchMoviesDetails = async (id) => {\n  const response = await axios.get(`movie/${id}`);\n\n  return response;\n};\n\nconst searchMoviesByName = async (name, page) => {\n  const response = await axios.get(\"search/movie\", {\n    params: {\n      query: name,\n      page,\n    },\n  });\n\n  return response;\n};\n\nconst searchCastAndCrew = async (id) => {\n  const response = await axios.get(`movie/${id}/credits`);\n\n  return response;\n};\n\nconst searchReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews`);\n\n  return response;\n};\n\nexport {\n  searchPopularMovies,\n  searchMoviesDetails,\n  searchMoviesByName,\n  searchCastAndCrew,\n  searchReviews,\n};\n","import styled from \"@emotion/styled\";\nimport { FcManager } from \"react-icons/fc\";\nimport { FcBusinesswoman } from \"react-icons/fc\";\n\nconst Container = styled.div``;\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  gap: 20px;\n`;\n\nconst Item = styled.li`\n  padding-bottom: 10px;\n  text-align: center;\n  width: calc((1214px - 100px) / 6);\n  min-height: 330px;\n\n  border: 1px solid #fff;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n`;\n\nconst Name = styled.h4`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  padding-right: 10px;\n  padding-left: 10px;\n\n  font-size: 16px;\n`;\n\nconst Character = styled.p`\n  padding-right: 10px;\n  padding-left: 10px;\n\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nconst NotFoundManPhoto = styled(FcManager)`\n  height: 275px;\n  width: 100%;\n`;\n\nconst NotFoundWomanPhoto = styled(FcBusinesswoman)`\n  height: 275px;\n  width: 100%;\n`;\n\nconst LoaderBox = styled.div`\n  padding-bottom: 60vh;\n`;\n\nexport {\n  Container,\n  CastList,\n  Item,\n  Img,\n  Name,\n  Character,\n  NotFoundManPhoto,\n  NotFoundWomanPhoto,\n  LoaderBox,\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchCastAndCrew } from \"Api\";\nimport Loader from \"components/Loader\";\nimport ErrorMessage from \"components/ErrorMessage\";\n\nimport {\n  Container,\n  CastList,\n  Item,\n  Img,\n  Name,\n  Character,\n  NotFoundManPhoto,\n  NotFoundWomanPhoto,\n  LoaderBox,\n} from \"./Cast.styled\";\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [status, setStatus] = useState(\"loading\");\n\n  useEffect(() => {\n    setStatus(\"loading\");\n\n    searchCastAndCrew(movieId)\n      .then((cast) => {\n        console.log(cast.data);\n        if (cast.data.cast.length !== 0) {\n          setActors(cast.data.cast);\n          setStatus(\"good\");\n        } else {\n          setStatus(\"error\");\n        }\n      })\n      .catch(() => {\n        setStatus(\"error\");\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {status === \"loading\" && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n\n      {actors && (\n        <CastList>\n          {actors.map((el) => {\n            const img = `https://image.tmdb.org/t/p/w500/${el.profile_path}`;\n\n            return (\n              <Item key={el.id}>\n                {el.profile_path && <Img src={img} alt=\"Piple\" />}\n                {el.gender === 2 && !el.profile_path && <NotFoundManPhoto />}\n                {el.gender === 1 && !el.profile_path && <NotFoundWomanPhoto />}\n                {el.gender === 0 && !el.profile_path && <NotFoundManPhoto />}\n\n                <Name>{el.name}</Name>\n                <Character>{el.character}</Character>\n              </Item>\n            );\n          })}\n        </CastList>\n      )}\n\n      {status === \"error\" && (\n        <ErrorMessage message={\"Sorry, we didn't find this information\"} />\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from \"@emotion/styled\";\nimport { FaSadTear } from \"react-icons/fa\";\n\nconst ErrorContainer = styled.div`\n  margin-top: 100px;\n  margin-bottom: 50px;\n  text-align: center;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 50px;\n  font-size: 40px;\n  text-shadow: 2px 3px var(--primary-color);\n`;\n\nconst Icon = styled(FaSadTear)`\n  width: 130px;\n  height: 130px;\n  color: var(--primary-color);\n`;\n\nexport { ErrorContainer, Title, Icon };\n","import { ErrorContainer, Title, Icon } from \"./ErrorMessage.styled\";\n\nconst ErrorMessage = ({ message }) => {\n  return (\n    <ErrorContainer>\n      <Title>{message}</Title>\n      <Icon />\n    </ErrorContainer>\n  );\n};\n\nexport default ErrorMessage;\n"],"names":["axios","api_key","searchPopularMovies","filter","page","params","response","searchMoviesDetails","id","searchMoviesByName","name","query","searchCastAndCrew","searchReviews","Container","styled","CastList","Item","Img","Name","Character","NotFoundManPhoto","FcManager","NotFoundWomanPhoto","FcBusinesswoman","LoaderBox","movieId","useParams","useState","actors","setActors","status","setStatus","useEffect","then","cast","console","log","data","length","catch","Loader","map","el","img","profile_path","src","alt","gender","character","ErrorMessage","message","ErrorContainer","Title","Icon","FaSadTear"],"sourceRoot":""}