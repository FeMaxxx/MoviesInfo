{"version":3,"file":"static/js/750.9f073659.chunk.js","mappings":"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","sources":["components/Main/Main.styled.jsx","components/Main/Main.jsx","redux/movies/selectors.jsx","hooks/useMovies.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/AllMovieInfo/AllMovieInfo.styled.jsx","components/AllMovieInfo/AllMovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst MainContainer = styled.main`\n  position: relative;\n  padding: 40px 40px;\n\n  min-height: 68.5vh;\n`;\n\nexport { MainContainer };\n","import PropTypes from \"prop-types\";\nimport { MainContainer } from \"./Main.styled\";\n\nconst Main = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nexport default Main;\n\nMain.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n","export const selectSearchMovies = (state) => state.movies.searchMovies;\nexport const selectPopularMovies = (state) => state.movies.popularMovies;\nexport const selectMoviesByDay = (state) => state.movies.moviesByDay;\nexport const selectMoviesByWeek = (state) => state.movies.moviesByWeek;\nexport const selectLoading = (state) => state.movies.loading;\nexport const selectChangeFilterLoading = (state) =>\n  state.movies.changeFilterLoading;\nexport const selectError = (state) => state.movies.error;\nexport const selectTotalPages = (state) => state.movies.totalPages;\nexport const selectPage = (state) => state.movies.page;\nexport const selectScrollPosition = (state) => state.movies.scrollPosition;\nexport const selectMovieDetails = (state) => state.movies.movieDetails;\n","import { useSelector } from \"react-redux\";\nimport {\n  selectSearchMovies,\n  selectPopularMovies,\n  selectMoviesByDay,\n  selectMoviesByWeek,\n  selectLoading,\n  selectChangeFilterLoading,\n  selectError,\n  selectTotalPages,\n  selectPage,\n  selectScrollPosition,\n  selectMovieDetails,\n} from \"redux/movies/selectors\";\n\nexport const useMovies = () => {\n  return {\n    searchMovies: useSelector(selectSearchMovies),\n    popularMovies: useSelector(selectPopularMovies),\n    moviesByDay: useSelector(selectMoviesByDay),\n    moviesByWeek: useSelector(selectMoviesByWeek),\n    loading: useSelector(selectLoading),\n    changeFilterLoading: useSelector(selectChangeFilterLoading),\n    error: useSelector(selectError),\n    totalPages: useSelector(selectTotalPages),\n    page: useSelector(selectPage),\n    scrollPosition: useSelector(selectScrollPosition),\n    movieDetails: useSelector(selectMovieDetails),\n  };\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Container = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 15px;\n\n  font-size: 22px;\n`;\n\nconst ButtonList = styled.ul`\n  display: flex;\n\n  gap: 30px;\n`;\n\nconst Button = styled(NavLink)`\n  display: flex;\n  padding: 5px;\n  background: none;\n  border: 3px solid #ffffff;\n  border-radius: 25%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color);\n\n  font-size: 14px;\n\n  transition: transform var(--animation), box-shadow var(--animation);\n\n  &:hover {\n    transform: translateY(5px);\n    box-shadow: none;\n  }\n\n  &.active {\n    transform: translateY(5px);\n    box-shadow: none !important;\n    cursor: default;\n  }\n`;\n\nexport { Container, Title, ButtonList, Button };\n","import PropTypes from \"prop-types\";\nimport { Container, Title, ButtonList, Button } from \"./AdditionalInfo.styled\";\n\nconst AdditionalInfo = ({ locationString }) => {\n  return (\n    <Container>\n      <Title>Additional information</Title>\n\n      <ButtonList>\n        <li>\n          <Button state={{ from: locationString }} to=\"cast\" type=\"button\">\n            Show cast\n          </Button>\n        </li>\n        <li>\n          <Button state={{ from: locationString }} to=\"crew\" type=\"button\">\n            Show crew\n          </Button>\n        </li>\n        <li>\n          <Button state={{ from: locationString }} to=\"reviews\" type=\"button\">\n            Show reviews\n          </Button>\n        </li>\n      </ButtonList>\n    </Container>\n  );\n};\n\nexport default AdditionalInfo;\n\nAdditionalInfo.propTypes = {\n  locationString: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { MdOutlineSearchOff } from \"react-icons/md\";\n\nconst AllInfo = styled.div`\n  margin-left: 40px;\n\n  width: 100%;\n`;\n\nconst InfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nconst Info = styled.p`\n  padding: 6px;\n  border: 2px solid #fff;\n  border-radius: 25%;\n\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n`;\n\nconst Overview = styled.p`\n  max-width: 500px;\n  padding: 10px;\n  border: 2px solid #fff;\n  border-radius: 5%;\n\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n`;\n\nconst Genres = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nconst NotFoundIcon = styled(MdOutlineSearchOff)`\n  border: 2px solid #fff;\n  border-radius: 25%;\n  padding: 5px;\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n  width: 38px;\n  height: 38px;\n  color: var(--primary-color);\n`;\n\nexport { AllInfo, InfoBox, Info, Genres, NotFoundIcon, Overview };\n","import { format } from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport {\n  AllInfo,\n  InfoBox,\n  Info,\n  Genres,\n  NotFoundIcon,\n  Overview,\n} from \"./AllMovieInfo.styled\";\n\nconst AllMovieInfo = ({ movieDetails }) => {\n  const { vote_average, tagline, release_date, genres, runtime, overview } =\n    movieDetails;\n\n  let date = null;\n  if (release_date) {\n    date = format(new Date(release_date), \"dd MMMM yyyy\");\n  }\n\n  return (\n    <AllInfo>\n      <InfoBox>\n        <h3>Vote average:</h3>\n        {vote_average ? (\n          <Info>{vote_average.toFixed(1)}</Info>\n        ) : (\n          <NotFoundIcon />\n        )}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Tagline:</h3>\n        {tagline ? <Info>{tagline}</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Release date:</h3>\n        {date ? <Info>{date}</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Genres:</h3>\n        {genres && genres.length !== 0 ? (\n          <Genres>\n            {genres.map((genre, index) => {\n              return (\n                <li key={index}>\n                  <Info>{genre.name}</Info>\n                </li>\n              );\n            })}\n          </Genres>\n        ) : (\n          <NotFoundIcon />\n        )}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Runtime:</h3>\n        {runtime ? <Info>{runtime} min.</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Overview:</h3>\n        {overview ? <Overview>{overview}</Overview> : <NotFoundIcon />}\n      </InfoBox>\n    </AllInfo>\n  );\n};\n\nexport default AllMovieInfo;\n\nAllMovieInfo.propTypes = {\n  movieDetails: PropTypes.shape({\n    vote_average: PropTypes.number,\n    tagline: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.array,\n    runtime: PropTypes.number,\n    overview: PropTypes.string,\n  }),\n};\n","import styled from \"@emotion/styled\";\nimport { BsArrowLeftCircle } from \"react-icons/bs\";\nimport { AiOutlineFileImage } from \"react-icons/ai\";\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 50px;\n  min-height: 55px;\n`;\n\nconst Title = styled.h2`\n  padding: 10px;\n  border: 2px solid #fff;\n  border-radius: 25%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color);\n\n  font-size: 26px;\n  font-weight: 700;\n`;\n\nconst Details = styled.div`\n  display: flex;\n\n  margin-bottom: 50px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  left: 40px;\n  top: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n\n  background: none;\n  border: 3px solid #ffffff;\n  border-radius: 50%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color),\n    inset 0px 0px 0px 6px var(--primary-color);\n\n  transition: transform var(--animation), box-shadow var(--animation);\n\n  &:hover {\n    transform: translateY(5px);\n    box-shadow: none;\n  }\n`;\n\nconst BackButtonIcon = styled(BsArrowLeftCircle)`\n  width: 32px;\n  height: 32px;\n  color: var(--primary-color);\n`;\n\nconst PosterBox = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  border: 1px solid #fff;\n\n  width: 300px;\n  height: 450px;\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst NotFoundPoster = styled(AiOutlineFileImage)`\n  height: 100%;\n  width: 100%;\n  color: var(--primary-color);\n`;\n\nexport {\n  TitleBox,\n  Title,\n  Details,\n  BackButton,\n  BackButtonIcon,\n  PosterBox,\n  Poster,\n  NotFoundPoster,\n};\n","import { useEffect } from \"react\";\nimport { useParams, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport Loader from \"components/Loader\";\nimport Main from \"components/Main\";\nimport AdditionalInfo from \"components/AdditionalInfo\";\nimport AllMovieInfo from \"components/AllMovieInfo\";\nimport SuspenseBox from \"components/SuspenseBox\";\n\nimport {\n  TitleBox,\n  Title,\n  Details,\n  BackButton,\n  BackButtonIcon,\n  PosterBox,\n  Poster,\n  NotFoundPoster,\n} from \"./MovieDetails.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { searchMoviesDetails } from \"redux/movies/operations\";\nimport { useMovies } from \"hooks/useMovies\";\n\nconst MovieDetails = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const locationString = location.state?.from ?? \"/movies\";\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n\n  const { movieDetails, loading } = useMovies();\n  const img = `https://image.tmdb.org/t/p/w500/${movieDetails?.poster_path}`;\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"instant\" });\n  }, []);\n\n  useEffect(() => {\n    dispatch(searchMoviesDetails(movieId));\n  }, [dispatch, movieId]);\n\n  const goBack = () => {\n    navigate(locationString, { replace: true });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <Main>\n        {movieDetails && !loading && (\n          <>\n            <TitleBox>\n              <Title>{movieDetails.title}</Title>\n            </TitleBox>\n\n            <Details>\n              <BackButton onClick={goBack} type=\"button\">\n                <BackButtonIcon />\n              </BackButton>\n\n              <PosterBox>\n                {movieDetails.poster_path ? (\n                  <Poster src={img} alt=\"Poster\" />\n                ) : (\n                  <NotFoundPoster />\n                )}\n              </PosterBox>\n\n              <AllMovieInfo movieDetails={movieDetails} />\n            </Details>\n\n            <AdditionalInfo locationString={locationString} />\n          </>\n        )}\n\n        <Suspense fallback={<SuspenseBox />}>\n          <Outlet />\n        </Suspense>\n      </Main>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MainContainer","styled","children","selectSearchMovies","state","movies","searchMovies","selectPopularMovies","popularMovies","selectMoviesByDay","moviesByDay","selectMoviesByWeek","moviesByWeek","selectLoading","loading","selectChangeFilterLoading","changeFilterLoading","selectError","error","selectTotalPages","totalPages","selectPage","page","selectScrollPosition","scrollPosition","selectMovieDetails","movieDetails","useMovies","useSelector","Container","Title","ButtonList","Button","NavLink","locationString","from","to","type","AllInfo","InfoBox","Info","Overview","Genres","NotFoundIcon","MdOutlineSearchOff","vote_average","tagline","release_date","genres","runtime","overview","date","format","Date","toFixed","length","map","genre","index","name","TitleBox","Details","BackButton","BackButtonIcon","BsArrowLeftCircle","PosterBox","Poster","NotFoundPoster","AiOutlineFileImage","dispatch","useDispatch","useLocation","navigate","useNavigate","movieId","useParams","img","poster_path","useEffect","window","scrollTo","top","behavior","searchMoviesDetails","Loader","Main","title","onClick","replace","src","alt","Suspense","fallback","SuspenseBox"],"sourceRoot":""}