{"version":3,"file":"static/js/750.1632ba4b.chunk.js","mappings":"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","sources":["Api/api.jsx","components/Main/Main.styled.jsx","components/Main/Main.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/AllMovieInfo/AllMovieInfo.styled.jsx","components/AllMovieInfo/AllMovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: \"eabf3be64fad896cb931bdc5f8933714\",\n};\n\nconst searchPopularMovies = async (filter, page) => {\n  const response = await axios.get(`trending/movie/${filter}`, {\n    params: {\n      page,\n    },\n  });\n\n  return response;\n};\n\nconst searchMoviesDetails = async (id) => {\n  const response = await axios.get(`movie/${id}`);\n\n  return response;\n};\n\nconst searchMoviesByName = async (name, page) => {\n  const response = await axios.get(\"search/movie\", {\n    params: {\n      query: name,\n      page,\n    },\n  });\n\n  return response;\n};\n\nconst searchCastAndCrew = async (id) => {\n  const response = await axios.get(`movie/${id}/credits`);\n\n  return response;\n};\n\nconst searchReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews`);\n\n  return response;\n};\n\nexport {\n  searchPopularMovies,\n  searchMoviesDetails,\n  searchMoviesByName,\n  searchCastAndCrew,\n  searchReviews,\n};\n","import styled from \"@emotion/styled\";\n\nconst MainContainer = styled.main`\n  position: relative;\n  padding: 40px 40px;\n\n  min-height: 70vh;\n`;\n\nexport { MainContainer };\n","import { MainContainer } from \"./Main.styled\";\n\nconst Main = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nexport default Main;\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Container = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 15px;\n\n  font-size: 22px;\n`;\n\nconst ButtonList = styled.ul`\n  display: flex;\n\n  gap: 30px;\n`;\n\nconst Button = styled(NavLink)`\n  display: flex;\n  padding: 5px;\n  background: none;\n  border: 3px solid #ffffff;\n  border-radius: 25%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color);\n\n  font-size: 14px;\n\n  transition: transform var(--animation), box-shadow var(--animation);\n\n  &:hover {\n    transform: translateY(5px);\n    box-shadow: none;\n  }\n\n  &.active {\n    transform: translateY(5px);\n    box-shadow: none !important;\n    cursor: default;\n  }\n`;\n\nexport { Container, Title, ButtonList, Button };\n","import PropTypes from \"prop-types\";\nimport { Container, Title, ButtonList, Button } from \"./AdditionalInfo.styled\";\n\nconst AdditionalInfo = ({ locationString }) => {\n  return (\n    <Container>\n      <Title>Additional information</Title>\n\n      <ButtonList>\n        <li>\n          <Button state={{ from: locationString }} to=\"cast\" type=\"button\">\n            Show cast\n          </Button>\n        </li>\n        <li>\n          <Button state={{ from: locationString }} to=\"crew\" type=\"button\">\n            Show crew\n          </Button>\n        </li>\n        <li>\n          <Button state={{ from: locationString }} to=\"reviews\" type=\"button\">\n            Show reviews\n          </Button>\n        </li>\n      </ButtonList>\n    </Container>\n  );\n};\n\nexport default AdditionalInfo;\n\nAdditionalInfo.propTypes = {\n  locationString: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { MdOutlineSearchOff } from \"react-icons/md\";\n\nconst AllInfo = styled.div`\n  margin-left: 40px;\n\n  width: 100%;\n`;\n\nconst InfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nconst Info = styled.p`\n  padding: 6px;\n  border: 2px solid #fff;\n  border-radius: 25%;\n\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n`;\n\nconst Overview = styled.p`\n  max-width: 500px;\n  padding: 10px;\n  border: 2px solid #fff;\n  border-radius: 5%;\n\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n`;\n\nconst Genres = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nconst NotFoundIcon = styled(MdOutlineSearchOff)`\n  border: 2px solid #fff;\n  border-radius: 25%;\n  padding: 5px;\n  box-shadow: 0px 0px 8px 1px var(--primary-color);\n  width: 38px;\n  height: 38px;\n  color: var(--primary-color);\n`;\n\nexport { AllInfo, InfoBox, Info, Genres, NotFoundIcon, Overview };\n","import { format } from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport {\n  AllInfo,\n  InfoBox,\n  Info,\n  Genres,\n  NotFoundIcon,\n  Overview,\n} from \"./AllMovieInfo.styled\";\n\nconst AllMovieInfo = ({ movieDetails }) => {\n  console.log(movieDetails);\n  const { vote_average, tagline, release_date, genres, runtime, overview } =\n    movieDetails;\n\n  let date = null;\n  if (release_date) {\n    date = format(new Date(release_date), \"dd MMMM yyyy\");\n  }\n\n  return (\n    <AllInfo>\n      <InfoBox>\n        <h3>Vote average:</h3>\n        {vote_average ? (\n          <Info>{vote_average.toFixed(1)}</Info>\n        ) : (\n          <NotFoundIcon />\n        )}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Tagline:</h3>\n        {tagline ? <Info>{tagline}</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Release date:</h3>\n        {date ? <Info>{date}</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Genres:</h3>\n        {genres && genres.length !== 0 ? (\n          <Genres>\n            {genres.map((genre, index) => {\n              return (\n                <li key={index}>\n                  <Info>{genre.name}</Info>\n                </li>\n              );\n            })}\n          </Genres>\n        ) : (\n          <NotFoundIcon />\n        )}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Runtime:</h3>\n        {runtime ? <Info>{runtime} min.</Info> : <NotFoundIcon />}\n      </InfoBox>\n\n      <InfoBox>\n        <h3>Overview:</h3>\n        {overview ? <Overview>{overview}</Overview> : <NotFoundIcon />}\n      </InfoBox>\n    </AllInfo>\n  );\n};\n\nexport default AllMovieInfo;\n\nAllMovieInfo.propTypes = {\n  movieDetails: PropTypes.shape({\n    vote_average: PropTypes.number,\n    tagline: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.array,\n    runtime: PropTypes.number,\n    overview: PropTypes.string,\n  }),\n};\n","import styled from \"@emotion/styled\";\nimport { BsArrowLeftCircle } from \"react-icons/bs\";\nimport { AiOutlineFileImage } from \"react-icons/ai\";\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.h2`\n  padding: 10px;\n  border: 2px solid #fff;\n  border-radius: 25%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color);\n\n  font-size: 26px;\n  font-weight: 700;\n`;\n\nconst Details = styled.div`\n  display: flex;\n\n  margin-bottom: 50px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  left: 40px;\n  top: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n\n  background: none;\n  border: 3px solid #ffffff;\n  border-radius: 50%;\n  box-shadow: 0px 5px 0px 2px var(--primary-color),\n    inset 0px 0px 0px 6px var(--primary-color);\n\n  transition: transform var(--animation), box-shadow var(--animation);\n\n  &:hover {\n    transform: translateY(5px);\n    box-shadow: none;\n  }\n`;\n\nconst BackButtonIcon = styled(BsArrowLeftCircle)`\n  width: 32px;\n  height: 32px;\n  color: var(--primary-color);\n`;\n\nconst PosterBox = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  border: 1px solid #fff;\n\n  width: 300px;\n  height: 450px;\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst NotFoundPoster = styled(AiOutlineFileImage)`\n  height: 100%;\n  width: 100%;\n  color: var(--primary-color);\n`;\n\nexport {\n  TitleBox,\n  Title,\n  Details,\n  BackButton,\n  BackButtonIcon,\n  PosterBox,\n  Poster,\n  NotFoundPoster,\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { searchMoviesDetails } from \"Api\";\n\nimport Main from \"components/Main\";\nimport AdditionalInfo from \"components/AdditionalInfo\";\nimport AllMovieInfo from \"components/AllMovieInfo\";\nimport SuspenseBox from \"components/SuspenseBox\";\n\nimport {\n  TitleBox,\n  Title,\n  Details,\n  BackButton,\n  BackButtonIcon,\n  PosterBox,\n  Poster,\n  NotFoundPoster,\n} from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const locationString = location.state?.from ?? \"/movies\";\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n\n  const [movieDetails, setMovieDetails] = useState([]);\n  const img = `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`;\n\n  useEffect(() => {\n    searchMoviesDetails(movieId)\n      .then((movie) => {\n        setMovieDetails(movie.data);\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  }, [movieId]);\n\n  const goBack = () => {\n    navigate(locationString, { replace: true });\n  };\n\n  const { title, poster_path } = movieDetails;\n\n  return (\n    <Main>\n      <TitleBox>\n        <Title>{title}</Title>\n      </TitleBox>\n\n      <Details>\n        <BackButton onClick={goBack} type=\"button\">\n          <BackButtonIcon />\n        </BackButton>\n\n        <PosterBox>\n          {poster_path ? <Poster src={img} alt=\"Poster\" /> : <NotFoundPoster />}\n        </PosterBox>\n\n        <AllMovieInfo movieDetails={movieDetails} />\n      </Details>\n\n      <AdditionalInfo locationString={locationString} />\n\n      <Suspense fallback={<SuspenseBox />}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","searchPopularMovies","filter","page","params","response","searchMoviesDetails","id","searchMoviesByName","name","query","searchCastAndCrew","searchReviews","MainContainer","styled","children","Container","Title","ButtonList","Button","NavLink","locationString","state","from","to","type","AllInfo","InfoBox","Info","Overview","Genres","NotFoundIcon","MdOutlineSearchOff","movieDetails","console","log","vote_average","tagline","release_date","genres","runtime","overview","date","format","Date","toFixed","length","map","genre","index","TitleBox","Details","BackButton","BackButtonIcon","BsArrowLeftCircle","PosterBox","Poster","NotFoundPoster","AiOutlineFileImage","useLocation","navigate","useNavigate","movieId","useParams","useState","setMovieDetails","img","poster_path","useEffect","then","movie","data","catch","title","Main","onClick","replace","src","alt","Suspense","fallback","SuspenseBox"],"sourceRoot":""}