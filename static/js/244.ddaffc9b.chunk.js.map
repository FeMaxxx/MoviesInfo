{"version":3,"file":"static/js/244.ddaffc9b.chunk.js","mappings":"yOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAiB,mCAAG,WAAOC,GAAP,uFACDH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,aADC,cAClBC,EADkB,yBAGjBA,GAHiB,2CAAH,sDAMjBC,EAAa,mCAAG,WAAOF,GAAP,uFACGH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,aADH,cACdC,EADc,yBAGbA,GAHa,2CAAH,qD,8FCVbE,EAAiBC,EAAAA,EAAAA,IAAH,6FAMdC,EAAQD,EAAAA,EAAAA,GAAH,kHAMLE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,IAAPH,CAAH,2F,SCHV,EATqB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QACtB,OACE,UAACL,EAAD,YACE,SAACE,EAAD,UAAQG,KACR,SAACF,EAAD,MAGL,C,+KCRKG,EAAYL,EAAAA,EAAAA,IAAH,sBAETM,EAAcN,EAAAA,EAAAA,GAAH,sBAEXO,EAAOP,EAAAA,EAAAA,GAAH,8JAQJQ,EAASR,EAAAA,EAAAA,GAAH,oJAQNS,EAAWT,EAAAA,EAAAA,EAAH,0FAORU,EAASV,EAAAA,EAAAA,EAAH,iEAKNW,EAAYX,EAAAA,EAAAA,IAAH,iD,SCqCf,EArDgB,WACd,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,WAArC,eAAOG,EAAP,KAAeC,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YAEVpB,EAAAA,EAAAA,GAAcc,GACXQ,MAAK,SAACC,GAC2B,IAA5BA,EAAIC,KAAKC,QAAQC,QACnBR,EAAWK,EAAIC,KAAKC,SACpBL,EAAU,SAEVA,EAAU,QAEb,IACAO,OAAM,WACLP,EAAU,QACX,GACJ,GAAE,CAACN,KAGF,UAACP,EAAD,WACc,YAAXY,IACC,SAACN,EAAD,WACE,SAACe,EAAA,EAAD,MAIHX,IACC,SAACT,EAAD,UACGS,EAAQY,KAAI,SAACC,GACZ,IAAMC,GAAOC,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,EAAOI,YAAa,gBAEjD,OACE,UAACzB,EAAD,YACE,SAACC,EAAD,UAASoB,EAAOK,UAChB,SAACxB,EAAD,UAAWoB,KACX,SAACnB,EAAD,UAASkB,EAAOM,YAHPN,EAAOhC,GAMrB,MAIO,UAAXqB,IACC,SAACkB,EAAA,EAAD,CAAc/B,QAAS,6CAI9B,C","sources":["Api/api.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n  api_key: \"eabf3be64fad896cb931bdc5f8933714\",\n};\n\nconst searchCastAndCrew = async (id) => {\n  const response = await axios.get(`movie/${id}/credits`);\n\n  return response;\n};\n\nconst searchReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews`);\n\n  return response;\n};\n\nexport { searchCastAndCrew, searchReviews };\n","import styled from \"@emotion/styled\";\nimport { FaSadTear } from \"react-icons/fa\";\n\nconst ErrorContainer = styled.div`\n  margin-top: 100px;\n  margin-bottom: 50px;\n  text-align: center;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 50px;\n  font-size: 40px;\n  text-shadow: 2px 3px var(--primary-color);\n`;\n\nconst Icon = styled(FaSadTear)`\n  width: 130px;\n  height: 130px;\n  color: var(--primary-color);\n`;\n\nexport { ErrorContainer, Title, Icon };\n","import PropTypes from \"prop-types\";\nimport { ErrorContainer, Title, Icon } from \"./ErrorMessage.styled\";\n\nconst ErrorMessage = ({ message }) => {\n  return (\n    <ErrorContainer>\n      <Title>{message}</Title>\n      <Icon />\n    </ErrorContainer>\n  );\n};\n\nexport default ErrorMessage;\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst Container = styled.div``;\n\nconst ReviewsList = styled.ul``;\n\nconst Item = styled.li`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--primary-color);\n    margin-bottom: 10px;\n  }\n`;\n\nconst Author = styled.h4`\n  margin-bottom: 5px;\n\n  font-size: 18px;\n  text-decoration: underline;\n  text-decoration-color: var(--primary-color);\n`;\n\nconst DateText = styled.p`\n  margin-bottom: 5px;\n\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nconst Review = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nconst LoaderBox = styled.div`\n  padding-bottom: 50vh;\n`;\n\nexport { Container, ReviewsList, Item, Author, DateText, Review, LoaderBox };\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { searchReviews } from \"Api\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\n\nimport Loader from \"components/Loader/Loader\";\n\nimport {\n  Container,\n  ReviewsList,\n  Item,\n  Author,\n  DateText,\n  Review,\n  LoaderBox,\n} from \"./Reviews.styled\";\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(\"loading\");\n\n  useEffect(() => {\n    setStatus(\"loading\");\n\n    searchReviews(movieId)\n      .then((rev) => {\n        if (rev.data.results.length !== 0) {\n          setReviews(rev.data.results);\n          setStatus(\"good\");\n        } else {\n          setStatus(\"error\");\n        }\n      })\n      .catch(() => {\n        setStatus(\"error\");\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {status === \"loading\" && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n\n      {reviews && (\n        <ReviewsList>\n          {reviews.map((review) => {\n            const date = format(new Date(review.created_at), \"dd MMMM yyyy\");\n\n            return (\n              <Item key={review.id}>\n                <Author>{review.author}</Author>\n                <DateText>{date}</DateText>\n                <Review>{review.content}</Review>\n              </Item>\n            );\n          })}\n        </ReviewsList>\n      )}\n\n      {status === \"error\" && (\n        <ErrorMessage message={\"Sorry, we didn't find this information\"} />\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","searchCastAndCrew","id","response","searchReviews","ErrorContainer","styled","Title","Icon","FaSadTear","message","Container","ReviewsList","Item","Author","DateText","Review","LoaderBox","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","then","rev","data","results","length","catch","Loader","map","review","date","format","Date","created_at","author","content","ErrorMessage"],"sourceRoot":""}